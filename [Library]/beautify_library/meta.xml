<meta>

    <info author="OvileAmriam" name="Beautify Library" type="Library" version="1.0.0"/>
    <oop>true</oop>

    <!-- Exports -->
    <script src="exports/essential.lua" type="client" cache="false"/>
    <script src="exports/window.lua" type="client" cache="false"/>
    <script src="exports/gridlist.lua" type="client" cache="false"/>
    <script src="exports/button.lua" type="client" cache="false"/>
    <script src="exports/label.lua" type="client" cache="false"/>
    <script src="exports/slider.lua" type="client" cache="false"/>

    <!-- Settings & Utilities -->
    <script src="utilities/client.lua" type="client" cache="false"/>
    <script src="settings/client.lua" type="client" cache="false"/>

    <!-- Handlers -->
    <script src="handlers/logger/client.lua" type="client" cache="false"/>
    <script src="handlers/cache/native.lua" type="client" cache="false"/>
    <script src="handlers/cache/asset.lua" type="client" cache="false"/>
    <script src="handlers/cache/event.lua" type="client" cache="false"/>
    <script src="handlers/cache/template.lua" type="client" cache="false"/>
    <script src="handlers/element/input.lua" type="client" cache="false"/>
    <script src="handlers/element/manager.lua" type="client" cache="false"/>
    <script src="handlers/element/attacher.lua" type="client" cache="false"/>
    <script src="handlers/element/renderer.lua" type="client" cache="false"/>
    <script src="handlers/renderer/component/scrollbar.lua" type="client" cache="false"/>
    <script src="handlers/renderer/window.lua" type="client" cache="false"/>
    <script src="handlers/renderer/gridlist.lua" type="client" cache="false"/>
    <script src="handlers/renderer/button.lua" type="client" cache="false"/>
    <script src="handlers/renderer/label.lua" type="client" cache="false"/>
    <script src="handlers/renderer/slider.lua" type="client" cache="false"/>

    <!-- Configurations -->
    <script src="configurations/assets/initial.lua" type="client" cache="false"/>
    <script src="configurations/assets/images.lua" type="client" cache="false"/>
    <script src="configurations/elements/initial.lua" type="client" cache="false"/>
    <script src="configurations/elements/window.lua" type="client" cache="false"/>
    <script src="configurations/elements/gridlist.lua" type="client" cache="false"/>
    <script src="configurations/elements/button.lua" type="client" cache="false"/>
    <script src="configurations/elements/label.lua" type="client" cache="false"/>
    <script src="configurations/elements/slider.lua" type="client" cache="false"/>
    <script src="configurations/events/initial.lua" type="client" cache="false"/>
    <script src="configurations/events/generic.lua" type="client" cache="false"/>
    <script src="configurations/templates/initial.lua" type="client" cache="false"/>
    <script src="configurations/templates/scrollbar.lua" type="client" cache="false"/>
    <script src="configurations/templates/window.lua" type="client" cache="false"/>
    <script src="configurations/templates/gridlist.lua" type="client" cache="false"/>
    <script src="configurations/templates/button.lua" type="client" cache="false"/>
    <script src="configurations/templates/label.lua" type="client" cache="false"/>
    <script src="configurations/templates/slider.lua" type="client" cache="false"/>

    <!-- Files: Assets: Fonts -->
    <file src="files/assets/fonts/teko_regular.ttf"/>
    <file src="files/assets/fonts/teko_medium.ttf"/>
    <file src="files/assets/fonts/signika_semibold.ttf"/>
    <file src="files/assets/fonts/poppins_medium.ttf"/>

    <!-- Files: Assets: Images -->
    <file src="files/assets/images/canvas/circle.png"/>
    <file src="files/assets/images/right_triangle/default.png"/>
    <file src="files/assets/images/right_triangle/flipped.png"/>
    <file src="files/assets/images/right_triangle/inverted.png"/>
    <file src="files/assets/images/right_triangle/flipped_inverted.png"/>
    <file src="files/assets/images/curved_square/regular/left.png"/>
    <file src="files/assets/images/curved_square/regular/right.png"/>
    <file src="files/assets/images/curved_square/regular/top_left.png"/>
    <file src="files/assets/images/curved_square/regular/top_right.png"/>
    <file src="files/assets/images/curved_square/regular/bottom_left.png"/>
    <file src="files/assets/images/curved_square/regular/bottom_right.png"/>
    <file src="files/assets/images/curved_square/regular/square.png"/>
    <file src="files/assets/images/curved_square/semi_thick/left.png"/>
    <file src="files/assets/images/curved_square/semi_thick/right.png"/>
    <file src="files/assets/images/curved_square/semi_thick/top_left.png"/>
    <file src="files/assets/images/curved_square/semi_thick/top_right.png"/>
    <file src="files/assets/images/curved_square/semi_thick/bottom_left.png"/>
    <file src="files/assets/images/curved_square/semi_thick/bottom_right.png"/>
    <file src="files/assets/images/curved_square/semi_thick/square.png"/>

    <!-- TODO: REMOVE LATER -->
    <script src="test.lua" type="client" cache="false"/>

    <!-- Params: clearResourceUITemplates() | Returns Boolean -->
    <export function="clearResourceUITemplates" type="client"/>

    <!-- Params: clearResourceUIElements() | Returns Boolean -->
    <export function="clearResourceUIElements" type="client"/>

    <!-- Params: getUITemplate(elementType) | Returns Data; Else false Boolean -->
    <export function="getUITemplate" type="client"/>

    <!-- Params: setUITemplate(elementType, elementTemplate) | Returns Boolean -->
    <export function="setUITemplate" type="client"/>

    <!-- Params: getUIParent(element) | Returns Element; Else false Boolean -->
    <export function="getUIParent" type="client"/>

    <!-- Params: isUIValid(element) | Returns Boolean -->
    <export function="isUIValid" type="client"/>

    <!-- Params: isUIVisible(element) | Returns Boolean -->
    <export function="isUIVisible" type="client"/>

    <!-- Params: setUIVisible(element, state) | Returns Boolean -->
    <export function="setUIVisible" type="client"/>

    <!-- Params: isUIDraggable(element) | Returns Boolean -->
    <export function="isUIDraggable" type="client"/>

    <!-- Params: setUIDraggable(element, state) | Returns Boolean -->
    <export function="setUIDraggable" type="client"/>

    <!-- Params: isUIDisabled(element) | Returns Boolean -->
    <export function="isUIDisabled" type="client"/>

    <!-- Params: setUIDisabled(element, state) | Returns Boolean -->
    <export function="setUIDisabled" type="client"/>

    <!-- Params: createWindow(x, y, width, height, title, parent, postGUI) | Returns Element; Else false Boolean -->
    <export function="createWindow" type="client"/>

    <!-- Params: createGridlist(x, y, width, height, parent, postGUI) | Returns Element; Else false Boolean -->
    <export function="createGridlist" type="client"/>

    <!-- Params: countGridlistColumns(gridlist) | Returns Data; Else false Boolean -->
    <export function="countGridlistColumns" type="client"/>

    <!-- Params: addGridlistColumn(gridlist, name, width) | Returns Column; Else false Boolean -->
    <export function="addGridlistColumn" type="client"/>

    <!-- Params: removeGridlistColumn(gridlist, column) | Returns Boolean -->
    <export function="removeGridlistColumn" type="client"/>

    <!-- Params: setGridlistColumnName(gridlist, column, name) | Returns Boolean -->
    <export function="setGridlistColumnName" type="client"/>

    <!-- Params: getGridlistColumnName(gridlist, column) | Returns Data; Else false Boolean -->
    <export function="getGridlistColumnName" type="client"/>

    <!-- Params: countGridlistRows(gridlist) | Returns Data; Else false Boolean -->
    <export function="countGridlistRows" type="client"/>

    <!-- Params: addGridlistRow(gridlist) | Returns Row; Else false Boolean -->
    <export function="addGridlistRow" type="client"/>

    <!-- Params: removeGridlistRow(gridlist, row) | Returns Boolean -->
    <export function="removeGridlistRow" type="client"/>

    <!-- Params: setGridlistRowData(gridlist, row, column, data) | Returns Boolean -->
    <export function="setGridlistRowData" type="client"/>

    <!-- Params: getGridlistRowData(gridlist, row, column) | Returns Data; Else false Boolean -->
    <export function="getGridlistRowData" type="client"/>

    <!-- Params: setGridlistSelection(gridlist, row) | Returns Boolean -->
    <export function="setGridlistSelection" type="client"/>

    <!-- Params: getGridlistSelection(gridlist) | Returns Row; Else false Boolean -->
    <export function="getGridlistSelection" type="client"/>

    <!-- Params: createButton(text, x, y, type, ..., parent, postGUI) | Returns Element; Else false Boolean -->
    <export function="createButton" type="client"/>

    <!-- Params: setButtonText(button, text) | Returns Boolean -->
    <export function="setButtonText" type="client"/>

    <!-- Params: getButtonText(button) | Returns Data; Else false Boolean -->
    <export function="getButtonText" type="client"/>

    <!-- Params: createLabel(text, x, y, width, height, parent, postGUI) | Returns Element; Else false Boolean -->
    <export function="createLabel" type="client"/>

    <!-- Params: setLabelText(label, text) | Returns Boolean -->
    <export function="setLabelText" type="client"/>

    <!-- Params: getLabelText(label) | Returns Data; Else false Boolean -->
    <export function="getLabelText" type="client"/>

    <!-- Params: setLabelColor(label, color) | Returns Boolean -->
    <export function="setLabelColor" type="client"/>

    <!-- Params: getLabelColor(label) | Returns Data; Else false Boolean -->
    <export function="getLabelColor" type="client"/>

    <!-- Params: setLabelHorizontalAlignment(label, alignment) | Returns Boolean -->
    <export function="setLabelHorizontalAlignment" type="client"/>

    <!-- Params: getLabelHorizontalAlignment(label) | Returns Data; Else false Boolean -->
    <export function="getLabelHorizontalAlignment" type="client"/>

    <!-- Params: setLabelVerticalAlignment(label, alignment) | Returns Boolean -->
    <export function="setLabelVerticalAlignment" type="client"/>

    <!-- Params: getLabelVerticalAlignment(label) | Returns Data; Else false Boolean -->
    <export function="getLabelVerticalAlignment" type="client"/>

    <!-- Params: createSlider(x, y, width, height, type, parent, postGUI) | Returns Element; Else false Boolean -->
    <export function="createSlider" type="client"/>

    <!-- Params: clearSliderText(slider) | Returns Boolean -->
    <export function="clearSliderText" type="client"/>

    <!-- Params: setSliderText(slider, text) | Returns Boolean -->
    <export function="setSliderText" type="client"/>

    <!-- Params: getSliderText(slider) | Returns Data; Else false Boolean -->
    <export function="getSliderText" type="client"/>

</meta>
