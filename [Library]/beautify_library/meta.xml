<meta>

    <info author="OvileAmriam" name="Beautify Library" type="Library" version="1.0.0"/>
    <oop>true</oop>

    <!-- Exports -->
    <script src="exports/essential.lua" type="client" cache="false"/>
    <script src="exports/window.lua" type="client" cache="false"/>
    <script src="exports/gridlist.lua" type="client" cache="false"/>

    <!-- Settings & Utilities -->
    <script src="utilities/client.lua" type="client" cache="false"/>
    <script src="settings/client.lua" type="client" cache="false"/>

    <!-- Handlers -->
    <script src="handlers/logger/client.lua" type="client" cache="false"/>
    <script src="handlers/cache/asset.lua" type="client" cache="false"/>
    <script src="handlers/cache/template.lua" type="client" cache="false"/>
    <script src="handlers/element/event.lua" type="client" cache="false"/>
    <script src="handlers/element/manager.lua" type="client" cache="false"/>
    <script src="handlers/element/attacher.lua" type="client" cache="false"/>
    <script src="handlers/element/renderer.lua" type="client" cache="false"/>
    <script src="handlers/overlay/renderer.lua" type="client" cache="false"/>
    <script src="handlers/renderer/window.lua" type="client" cache="false"/>
    <script src="handlers/renderer/gridlist.lua" type="client" cache="false"/>

    <!-- Configurations -->
    <script src="configurations/assets.lua" type="client" cache="false"/>
    <script src="configurations/elements.lua" type="client" cache="false"/>
    <script src="configurations/template.lua" type="client" cache="false"/>

    <!-- Files: Assets: Fonts -->
    <file src="files/assets/fonts/teko_medium.ttf"/>
    <file src="files/assets/fonts/signika_semibold.ttf"/>
    <file src="files/assets/fonts/mukta_semibold.ttf"/>

    <!-- Files: Assets: Images -->
    <file src="files/assets/images/right_triangle/default.png"/>
    <file src="files/assets/images/right_triangle/flipped.png"/>
    <file src="files/assets/images/right_triangle/inverted.png"/>
    <file src="files/assets/images/right_triangle/flipped_inverted.png"/>
    <file src="files/assets/images/curved_square/left.png"/>
    <file src="files/assets/images/curved_square/right.png"/>
    <file src="files/assets/images/curved_square/top_left.png"/>
    <file src="files/assets/images/curved_square/top_right.png"/>
    <file src="files/assets/images/curved_square/bottom_left.png"/>
    <file src="files/assets/images/curved_square/bottom_right.png"/>
    <file src="files/assets/images/curved_square/square.png"/>

    <!-- TODO: REMOVE LATER -->
    <script src="test.lua" type="client" cache="false"/>

    <!-- Params: getUIParent(element) | Returns Element; Else false Boolean -->
    <export function="getUIParent" type="client"/>

    <!-- Params: isUIValid(element) | Returns Boolean -->
    <export function="isUIValid" type="client"/>

    <!-- Params: isUIVisible(element) | Returns Boolean -->
    <export function="isUIVisible" type="client"/>

    <!-- Params: setUIVisible(element, state) | Returns Boolean -->
    <export function="setUIVisible" type="client"/>

    <!-- Params: createWindow(x, y, width, height, title, postGUI) | Returns Element; Else false Boolean -->
    <export function="createWindow" type="client"/>

    <!-- Params: createGridlist(x, y, width, height, parent, postGUI) | Returns Element; Else false Boolean -->
    <export function="createGridlist" type="client"/>

    <!-- Params: addGridlistColumn(gridlist, name, width) | Returns Column; Else false Boolean -->
    <export function="addGridlistColumn" type="client"/>

    <!-- Params: removeGridlistColumn(gridlist, column) | Returns Boolean -->
    <export function="removeGridlistColumn" type="client"/>

    <!-- Params: addGridlistRow(gridlist) | Returns Row; Else false Boolean -->
    <export function="addGridlistRow" type="client"/>

    <!-- Params: removeGridlistRow(gridlist, row) | Returns Boolean -->
    <export function="removeGridlistRow" type="client"/>

    <!-- Params: setGridlistRowData(gridlist, row, column, data) | Returns Boolean -->
    <export function="setGridlistRowData" type="client"/>

    <!-- Params: getGridlistRowData(gridlist, row, column) | Returns Data; Else false Boolean -->
    <export function="getGridlistRowData" type="client"/>

    <!-- Params: getGridlistSelection(gridlist) | Returns Row; Else false Boolean -->
    <export function="getGridlistSelection" type="client"/>

</meta>
